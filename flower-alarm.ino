#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "RTClib.h"
#include <ezBuzzer.h>

 
RTC_DS3231 rtc;
char daysOfTheWeek[7][12] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
 
#define SCREEN_WIDTH 128  // OLED display width, in pixels
#define SCREEN_HEIGHT 64  // OLED display height, in pixels
#define OLED_RESET    -1  // Reset pin # (or -1 if sharing reset pin)
#define BUZZER PA2
#define LED PA4
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

int f1 = 0;
int f2 = 0;
int f3 = 0;
int f4 = 0;


const unsigned char PROGMEM Flower [] = {
0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x73,
0x00, 0x00, 0x00, 0xFF, 0xE0, 0x63, 0x00, 0x00, 0x00, 0xC0, 0x30, 0xC3, 0x00, 0x00, 0x00, 0xC0,
0x18, 0xD3, 0x00, 0x00, 0x00, 0xC0, 0x08, 0xF2, 0x00, 0x00, 0x00, 0x40, 0x8C, 0xE6, 0x00, 0x00,
0x00, 0x60, 0xC4, 0xFC, 0x00, 0x00, 0x00, 0x30, 0x74, 0x71, 0xF0, 0x00, 0x00, 0x30, 0x1E, 0xC7,
0xBC, 0x00, 0x00, 0x1C, 0x0E, 0xCE, 0x06, 0x00, 0x00, 0x0F, 0xFF, 0x8C, 0x02, 0x00, 0x00, 0x01,
0xE1, 0x9F, 0x06, 0x00, 0x00, 0x00, 0x01, 0xBE, 0x0C, 0x00, 0x00, 0x00, 0x31, 0xF8, 0x1C, 0x00,
0x00, 0x00, 0x11, 0xCF, 0xF8, 0x00, 0x00, 0x00, 0x07, 0x83, 0xE0, 0x00, 0x00, 0x00, 0x01, 0x80,
0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x04, 0x00,
0x00, 0x00, 0x00, 0x20, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0C, 0xC8, 0x89, 0x91, 0x13, 0x30,
0x0C, 0xC8, 0x89, 0x91, 0x13, 0x30, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x04, 0x00, 0x00, 0x00,
0x00, 0x20, 0x07, 0xFF, 0xFF, 0xFF, 0x9E, 0x60, 0x03, 0xFF, 0xFF, 0xFF, 0x1C, 0xC0, 0x03, 0x00,
0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00,
0x01, 0x80, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00, 0x80,
0x00, 0x00, 0x01, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x03, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x03, 0x00,
0x00, 0xC0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x40, 0x00, 0x00,
0x02, 0x00, 0x00, 0x60, 0x00, 0x00, 0x06, 0x00, 0x00, 0x67, 0xFF, 0xF3, 0xC6, 0x00, 0x00, 0x60,
0x00, 0x00, 0x06, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF8, 0x00
};


const unsigned char PROGMEM Clock [] = {
0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF,
0xE0, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x7F,
0xC0, 0x03, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x3F, 0x80,
0x03, 0xF0, 0x00, 0x00, 0x0F, 0xC0, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x0F, 0xC0, 0x00, 0x00,
0x03, 0xF0, 0x0F, 0x80, 0x00, 0x00, 0x01, 0xF0, 0x1F, 0x00, 0x03, 0x80, 0x00, 0xF8, 0x3F, 0x00,
0x07, 0x80, 0x00, 0xFC, 0x3E, 0x00, 0x07, 0x80, 0x00, 0x7C, 0x3C, 0x00, 0x07, 0x80, 0x00, 0x3C,
0x7C, 0x00, 0x07, 0x80, 0x00, 0x3E, 0x7C, 0x00, 0x07, 0x80, 0x00, 0x3E, 0x78, 0x00, 0x07, 0x80,
0x00, 0x1E, 0xF8, 0x00, 0x07, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0x80, 0x00, 0x1F, 0xF8, 0x00,
0x07, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0xC0, 0x00, 0x1F,
0xF8, 0x00, 0x07, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0xFE, 0x00, 0x1F, 0xF8, 0x00, 0x03, 0xFF,
0x80, 0x1F, 0xF8, 0x00, 0x00, 0xFF, 0x80, 0x1F, 0xF8, 0x00, 0x00, 0x1F, 0x80, 0x1F, 0x78, 0x00,
0x00, 0x07, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x3E,
0x3C, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3F, 0x00, 0x00, 0x00,
0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x01, 0xF0, 0x0F, 0xC0,
0x00, 0x00, 0x03, 0xF0, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xE0, 0x03, 0xF0, 0x00, 0x00, 0x0F, 0xC0,
0x01, 0xFC, 0x00, 0x00, 0x3F, 0x80, 0x00, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0xC0, 0x03,
0xFE, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x07,
0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00
};


void setup() {
  Serial.begin(9600);
  pinMode(BUZZER, OUTPUT);
  pinMode(LED, OUTPUT);
  if (! rtc.begin()) {
  Serial.println("Couldn't find RTC");
  while (1);
  }
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
      Serial.println(F("SSD1306 allocation failed"));
      for(;;); // Don't proceed, loop forever
  }
   
  rtc.adjust(DateTime(__DATE__, __TIME__));
   
  display.display();
  delay(2000);
  display.clearDisplay();
  display.clearDisplay();
  display.setTextColor(WHITE);
  //display.startscrollright(0x00, 0x0F);
  display.clearDisplay();
  display.drawBitmap(40, 10, Clock, 48, 48, 1);
  display.display();
  delay(1000);
}

void loop(){
  DateTime now = rtc.now();
  GetDateTime();
  if(now.second() == 1){
      f1++;
      f2++;
      f3++;
      f4++;

      switch(f1){
          case 1:
            display.clearDisplay();
            display.drawBitmap(40, 10, Flower, 48, 48, 1);
            display.display();
            // buzzer tone
            tone(BUZZER, 360);
            delay(500);
            noTone(BUZZER);
            delay(500);
            tone(BUZZER, 360);
            delay(500);
            noTone(BUZZER);
            delay(500);
            tone(BUZZER, 360);
            delay(500);
            noTone(BUZZER);
            delay(1000);
            display.clearDisplay();
            display.setTextSize(2);
            display.setTextColor(WHITE);
            display.setCursor(0, 0);
            display.println("Watering Flower One");
            display.display();
            delay(2000);
            display.clearDisplay();
            display.drawBitmap(40, 10, Flower, 48, 48, 1);
            display.display();
            tone(BUZZER, 360);
            delay(500);
            noTone(BUZZER);
            delay(500);
            tone(BUZZER, 360);
            delay(500);
            noTone(BUZZER);
            delay(500);
            tone(BUZZER, 360);
            delay(500);
            noTone(BUZZER);
            delay(1000);
            f1 = 0;
      }
      switch(f2){
        case 2:
              display.clearDisplay();
              display.drawBitmap(40, 10, Flower, 48, 48, 1);
              display.display();
              // buzzer tone
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(1000);
              display.clearDisplay();
              display.setTextSize(2);
              display.setTextColor(WHITE);
              display.setCursor(0, 0);
              display.println("Watering Flower Two");
              display.display();
              delay(2000);
              display.clearDisplay();
              display.drawBitmap(40, 10, Flower, 48, 48, 1);
              display.display();
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(1000);
              f2 = 0;
      }
      switch(f3){
        case 5:
              display.clearDisplay();
              display.drawBitmap(40, 10, Flower, 48, 48, 1);
              display.display();
              // buzzer tone
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(1000);
              display.clearDisplay();
              display.setTextSize(2);
              display.setTextColor(WHITE);
              display.setCursor(0, 0);
              display.println("Watering Flower Three");
              display.display();
              delay(2000);
              display.clearDisplay();
              display.drawBitmap(40, 10, Flower, 48, 48, 1);
              display.display();
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(1000);
              f3 = 0;
      }
      switch(f4){
        case 10:
              display.clearDisplay();
              display.drawBitmap(40, 10, Flower, 48, 48, 1);
              display.display();
              // buzzer tone
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(1000);
              display.clearDisplay();
              display.setTextSize(2);
              display.setTextColor(WHITE);
              display.setCursor(0, 0);
              display.println("Watering Flower Four");
              display.display();
              delay(2000);
              display.clearDisplay();
              display.drawBitmap(40, 10, Flower, 48, 48, 1);
              display.display();
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(500);
              tone(BUZZER, 360);
              delay(500);
              noTone(BUZZER);
              delay(1000);
              f4 = 0;
      }
    
  }
 
}


void GetDateTime(){
  DateTime now = rtc.now();
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(75,0);
  display.println(now.second(), DEC);
   
  display.setTextSize(2);
  display.setCursor(25,0);
  display.println(":");
   
  display.setTextSize(2);
  display.setCursor(65,0);
  display.println(":");
   
  display.setTextSize(2);
  display.setCursor(40,0);
  display.println(now.minute(), DEC);
   
  display.setTextSize(2);
  display.setCursor(0,0);
  display.println(now.hour(), DEC);
   
  display.setTextSize(2);
  display.setCursor(0,20);
  display.println(now.day(), DEC);
   
  display.setTextSize(2);
  display.setCursor(25,20);
  display.println("/");
   
  display.setTextSize(2);
  display.setCursor(40,20);
  display.println(now.month(), DEC);
   
  display.setTextSize(2);
  display.setCursor(55,20);
  display.println("/");
   
  display.setTextSize(2);
  display.setCursor(70,20);
  display.println(now.year(), DEC);
   
  display.setTextSize(2);
  display.setCursor(0,40);
  display.print(daysOfTheWeek[now.dayOfTheWeek()]);
   
  display.display(); 
}